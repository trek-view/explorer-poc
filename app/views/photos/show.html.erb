<% if @tour.photos.present? %>
  <% provide :head_tags do %>
    <meta name='turbolinks-visit-control' content='reload'>
  <% end %>
<% end %>

<div class="photo-container row">
  <div class="col-lg-9 col-sm-12">
    <% if @guidebook.present? %>
      <div class="row">
        <div class="col-lg-12 mt-2">
          <strong>Current Guidebook</strong>
        </div>
        <div class="col-lg-6 col-sm-12">
          <strong>Name:</strong> <%= link_to @guidebook.name, user_guidebook_path(@user, @guidebook) %>
        </div>
        <div class="col-lg-6 col-sm-12">
          <strong>Category:</strong> <%= @guidebook.category.name %>
        </div>
        <div class="col-lg-6 col-sm-12">
          <strong>Description:</strong> <%= @guidebook.description %>
        </div>
      </div>
    <% end %>
  </div>
  <div class="col-lg-3 col-sm-12">
    <% if current_user.present? %>
      <%= render partial: 'photos/photo_addition_button', locals: {user: current_user, photo: @photo} %>
    <% end %>
  </div>

  <div class="py-5 col-lg-12">
    <div class="card">
      <div class="card-header">
        <%= render(ViewpointComponent, viewpoint: @photo.favoritable_score.present? ? @photo.favoritable_score[:favorite] : 0, photo_id: @photo.id) %>
        <%= render(EmbedComponent, code: pannellum_iframe(@photo)) %>
        <div id="panorama"></div>
        <div id="mapbox" class="mb-3"></div>
        <div id="mapbox-token" class="photo-additional-info"><%= mapbox_token() %></div>
        <div id="aws-s3-bucket-name" class="photo-additional-info"><%= aws_s3_bucket_name() %></div>
      </div>
      <div class="card-body">
        <table class="table table-response table-bordered photo-attributes-table">
          <thead>
            <th>Attribute</th>
            <th>Value</th>
          </thead>
          <tbody>
            <tr>
              <td><strong>Tour info</strong></td>
              <td></td>
            </tr>
            <tr>
              <td>Name</td>
              <td><%= link_to @tour.name, user_tour_path(@tour.user, @tour) %></td>
            </tr>
            <tr>
              <td>Explorer Photo ID</td>
              <td><%= @photo.id %></td>
            </tr>
            <tr>
              <td>Tourer Photo ID</td>
              <td><%= @photo.tourer_photo_id %></td>
            </tr>
            <tr><td></td><td></td></tr>

            <% @guidebooks.each do |guidebook| %>
              <tr>
                <td><strong>Guidebook info</strong></td>
                <td></td>
              </tr>
              <tr>
                <td>Name</td>
                <td><%= guidebook.name %></td>
              </tr>
              <tr>
                <td>Description</td>
                <td><%= guidebook.description %></td>
              </tr>
              <tr>
                <td>Category</td>
                <td><%= guidebook.category.name %></td>
              </tr>
              <tr><td></td><td></td></tr>
            <% end %>

            <tr>
              <td><strong>Photo info</strong></td>
              <td></td>
            </tr>
            <tr>
              <td>Filename</td>
              <td><%= "#{@photo.filename}" %></td>
            </tr>
            <tr>
              <td>Capture time</td>
              <td><%= @photo.taken_at.to_formatted_s(:db) %></td>
            </tr>
            <tr>
              <td>Latitude</td>
              <td><%= "#{@photo.latitude}" %></td>
            </tr>
            <tr>
              <td>Longitude</td>
              <td><%= @photo.longitude %></td>
            </tr>
            <tr>
              <td>Elevation</td>
              <td><%= @photo.elevation_meters %>m</td>
            </tr>
            <tr>
              <td>Photo Country</td>
              <td><%= @photo.address['country_code'] %></td>
            </tr>
            <tr>
              <td>Google Plus Code</td>
              <td><%= @photo['address']['plus_code'] %></td>
            </tr>
            <tr>
              <td>Camera make</td>
              <td><%= @photo.camera_make %></td>
            </tr>
            <tr>
              <td>Camera model</td>
              <td><%= @photo.camera_model %></td>
            </tr>
            <tr>
              <td>Tourer Connected photos</td>
              <td>
                <% @connected_photos.each do |photo| %>
                  <%= link_to photo.tourer_photo_id, photo_path(photo), target: "_blank" %>
                <% end %>
              </td>
            </tr>
            <tr>
              <td>View on Google Street View</td>
              <% if @photo['streetview']['share_link'] %>
                <td><%= link_to @photo['streetview']['share_link'], @photo['streetview']['share_link'], target: "_blank" %></td>
              <% end %>
            </tr>
            <tr>
              <td>View on Open Trail View</td>
              <td>https://www.opentrailview.org/?lat=<%= "#{@photo.latitude}" %>&lon=<%= @photo.longitude %>&zoom=10</td>
            </tr>
            <tr>
              <td>View on Mapillary</td>
              <td>https://www.mapillary.com/app/?lat=<%= "#{@photo.latitude}" %>&lon=<%= @photo.longitude %>&z=10</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function(){
    console.log('==== gon: ', gon);
    if (gon.pannellum_config === undefined) {
      return false;
    }
    markers = [];
    viewer = pannellum.viewer('panorama', gon.pannellum_config);
    console.log('==== viewer: ', viewer);

    // initSceneMap(gon.photos); // removed Google Map
    initSceneMapBox(gon.photos);

    currentScene = viewer.getScene();
    if (currentScene) {
      currentMarker = markers.find(obj => obj.tourer_photo_id == currentScene);
      if (currentMarker) {
        // currentMarker.setAnimation(google.maps.Animation.BOUNCE);
        currentMarker.bounce({duration: 5000, height: 100});
      }
    }

    viewer.on('scenechange', function () {
      hotSpot = gon.pannellum_config.scenes[currentScene].hotSpots.find(obj => obj.sceneId == viewer.getScene());
      photo = gon.photos.find(obj => obj.tourer_photo_id == viewer.getScene());
      const s3dom = document.getElementById('aws-s3-bucket-name').childNodes;
      const s3name = s3dom[0].data;
      iframe_url = '<iframe width="600" height="400" allowfullscreen style="border-style:none;" src="' + 
      'https://' + s3name + '/static/pannellum/pannellum.htm' + 
      '#panorama=' + 
        photo.image_path + 
        '&amp;title=' + encodeURIComponent(gon.tour_name) + 
        '&amp;author=' + encodeURIComponent(gon.author_name) + 
        '&amp;autoLoad=true"></iframe><p><a href="' + 
        gon.root_url + 'photos/' + photo.id + 
        '" target="_blank">View on Trek View Explorer</a></p>';

      $('.custom-tooltip').text(iframe_url);

      if (hotSpot) {
        viewer.setYaw(hotSpot.yaw);
      }

      prevMarker = markers.find(obj => obj.tourer_photo_id == currentScene);

      currentScene = viewer.getScene();

      currentMarker = markers.find(obj => obj.tourer_photo_id == currentScene);

      if (prevMarker) prevMarker.drop();
      if (currentMarker) {
        currentMarker.bounce({duration: 5000, height: 100});
      }

      // prevMarker.setAnimation(google.maps.Animation.DROP);
      // currentMarker.setAnimation(google.maps.Animation.BOUNCE);
    });
  });
</script>