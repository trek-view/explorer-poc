image: ruby:2.6.3

services:
  - postgres:10.1

variables:
  BUNDLE_PATH: vendor/bundle
  DISABLE_SPRING: 1
  POSTGRES_DB: explorer_test
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ""
  # CONTAINER_IMAGE: registry.gitlab.com/trekview/explorer
  CONTAINER_CURRENT_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  CONTAINER_STABLE_IMAGE: $CI_REGISTRY_IMAGE:stable

stages:
  - test
  - build
  - deploy

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

cache:
  paths:
    - .bundle
    - vendor/ruby

test:
  stage: test

  script:
    - apt-get update -qy
    - apt-get install -y nodejs
    - gem install bundler:2.0.2
    - bundle install --path .bundle
    - cp config/database.yml.ci config/database.yml
    - bundle exec rake db:create db:schema:load RAILS_ENV=test || true
    - bundle exec rake db:migrate RAILS_ENV=test
    - bundle exec rspec
    # - bundle exec cucumber

build:
  stage: build

  image: docker:stable

  services:
    - docker:dind

  script:
    - docker pull $CONTAINER_IMAGE:master || true
    - docker build --cache-from $CONTAINER_IMAGE:master --tag $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME .
    - docker tag dockerrails_app_production $CONTAINER_CURRENT_IMAGE
    - docker push $CONTAINER_CURRENT_IMAGE

deploy-latest-image:
  stage: deploy
  script:
    - docker pull $CONTAINER_CURRENT_IMAGE
    - docker tag $CONTAINER_CURRENT_IMAGE $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
    # - curl -X POST $PORTAINER_HOOK_APP
    # - curl -X POST $PORTAINER_HOOK_WORKER
  only:
    - staging

deploy-stable-image:
  stage: deploy
  script:
    - docker pull $CONTAINER_CURRENT_IMAGE
    - docker tag $CONTAINER_CURRENT_IMAGE $CONTAINER_STABLE_IMAGE
    - docker push $CONTAINER_STABLE_IMAGE
  only:
    - production
